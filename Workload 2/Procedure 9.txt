Procedure 53
##################
We transformed this procedure from TPC-DS benchmark query# 53. We include a loop region to create this procedure.
######################################
i = 1200, k = 1219
define DMS = random(1176,1224,uniform);
define _LIMIT=100;

CREATE PROCEDURE PT_8(IN INT i, IN INT k)
AS BEGIN
	DECLARE n INT := i;
	WHILE i < k DO
		v_t=[_LIMITA] select [_LIMITB] * from 
			(select i_manufact_id,
			sum(ss_sales_price) sum_sales,
			avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
			from item, store_sales, date_dim, store
			where ss_item_sk = i_item_sk and
			ss_sold_date_sk = d_date_sk and
			ss_store_sk = s_store_sk and
			d_month_seq between n and i and
			((i_category in ('Books','Children','Electronics') and
			i_class in ('personal','portable','reference','self-help') and
			i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
					'exportiunivamalg #9','scholaramalgamalg #9'))
			or(i_category in ('Women','Music','Men') and
			i_class in ('accessories','classical','fragrances','pants') and
			i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
					'importoamalg #1')))
			group by i_manufact_id, d_qoy ) tmp1
			where case when avg_quarterly_sales > 0 
				then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
				else null end > 0.1
			order by avg_quarterly_sales,
				 sum_sales,
				 i_manufact_id
			[_LIMITC];
		  i = i + 1;
	END WHILE;
	select count(*) from v_t;
END;